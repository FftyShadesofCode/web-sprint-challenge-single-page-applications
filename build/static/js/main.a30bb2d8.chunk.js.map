{"version":3,"sources":["validation/formSchema.js","components/Home.js","components/Pizza.js","App.js","index.js"],"names":["formSchema","yup","shape","name","trim","min","required","size","oneOf","pepperoni","pineapple","bacon","roasted_garlic","chorizo","special","Home","className","Pizza","props","values","change","submit","disabled","errors","onChange","evt","target","value","checked","type","id","onSubmit","preventDefault","initialFormValues","jalapeno","initialFormErrors","initialOrder","App","useState","order","setOrder","formValues","setFormValues","formErrors","setFormErrors","setDisabled","validate","schema","then","catch","err","useEffect","isValid","valid","to","path","newPizza","axios","post","res","console","log","data","finally","postPizza","exact","map","piz","ReactDOM","render","document","getElementById"],"mappings":"2OAmBeA,EAjBIC,MAAaC,MAAM,CAClCC,KAAMF,MAEDG,OACAC,IAAI,EAAG,sCACPC,SAAS,oBACdC,KAAMN,MAEDO,MAAM,CAAC,UAAW,cAAe,mBAAoB,0BAC1DC,UAAWR,MACXS,UAAWT,MACXU,MAAOV,MACPW,eAAgBX,MAChBY,QAASZ,MACTa,QAASb,Q,OCPEc,EAPF,WACT,OACI,qBAAKC,UAAU,eAAf,SACI,gDCiGGC,EApGD,SAACC,GACX,IAAQC,EAA6CD,EAA7CC,OAAQC,EAAqCF,EAArCE,OAAQC,EAA6BH,EAA7BG,OAAQC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAMpCC,EAAW,SAAAC,GACb,MAAuCA,EAAIC,OAAnCvB,EAAR,EAAQA,KAAMwB,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,KAE9BT,EAAOjB,EADqB,aAAT0B,EAAsBD,EAAUD,IAIvD,OACI,qBAAKX,UAAU,gBAAf,SACI,sBAAMc,GAAG,aAAaC,SAZb,SAAAN,GACbA,EAAIO,iBACJX,KAUI,SACI,sBAAKL,UAAU,SAAf,UACI,+CACI,uBACIa,KAAK,OACLC,GAAG,aACH3B,KAAK,OACLqB,SAAUA,EACVG,MAAOR,EAAOhB,UAEtB,uBACA,gDACI,yBAAQ2B,GAAG,gBAAgBH,MAAOR,EAAOZ,KAAMJ,KAAK,OAAOqB,SAAUA,EAArE,UACI,wBAAQG,MAAM,GAAd,+BACA,wBAAQA,MAAM,QAAd,qBACA,wBAAQA,MAAM,SAAd,0BACA,wBAAQA,MAAM,SAAd,mCAGR,uBACA,+CACI,uBACIC,QAAST,EAAOV,UAChBe,SAAUA,EACVrB,KAAK,YACL0B,KAAK,gBAGb,uBACA,+CACI,uBACID,QAAST,EAAOT,UAChBc,SAAUA,EACVrB,KAAK,YACL0B,KAAK,gBAGb,uBACA,2CACI,uBACID,QAAST,EAAOR,MAChBa,SAAUA,EACVrB,KAAK,QACL0B,KAAK,gBAGb,uBACA,oDACI,uBACID,QAAST,EAAOP,eAChBY,SAAUA,EACVrB,KAAK,iBACL0B,KAAK,gBAGb,uBAAM,6CACN,uBACID,QAAST,EAAON,QAChBW,SAAUA,EACVrB,KAAK,UACL0B,KAAK,gBAGT,uBACA,0DACI,uBACIA,KAAK,OACLC,GAAG,eACH3B,KAAK,UACLqB,SAAUA,EACVG,MAAOR,EAAOL,aAEtB,sBAAKE,UAAU,SAAf,UACI,8BAAMO,EAAOpB,OACb,8BAAMoB,EAAOhB,UAEjB,qBAAKS,UAAU,SAAf,SACI,wBAAQc,GAAG,eAAeR,SAAUA,EAApC,8BCjFlBW,EAAoB,CACtB9B,KAAM,GACNI,KAAM,GACN2B,UAAU,EACVxB,WAAW,EACXC,OAAO,EACPC,gBAAgB,EAChBE,QAAS,IAGPqB,EAAoB,CACtBhC,KAAM,GACNI,KAAM,IAIJ6B,EAAe,GAqFNC,EAnFH,WAER,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAASL,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,mBAASH,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBARZ,MAQpB,mBAAOhB,EAAP,KAAiBuB,EAAjB,KAsCMC,EAAW,SAAC3C,EAAMwB,GACpB1B,IAAU8C,EAAQ5C,GACb2C,SAASnB,GACTqB,MAAK,kBAAMJ,EAAc,2BAAKD,GAAN,kBAAmBxC,EAAM,SACjD8C,OAAM,SAAAC,GAAG,OAAIN,EAAc,2BAAKD,GAAN,kBAAmBxC,EAAO+C,EAAI3B,OAAO,UAQxE,OAJA4B,qBAAU,WACNJ,EAAOK,QAAQX,GAAYO,MAAK,SAAAK,GAAK,OAAIR,GAAaQ,QACvD,CAACZ,IAGA,sBAAKzB,UAAU,MAAf,UACI,iCACI,gCACI,cAAC,IAAD,CAAMsC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMxB,GAAG,cAAcwB,GAAG,SAA1B,8BAGR,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,CACIpC,OAAQsB,EACRrB,OA1CI,SAACjB,EAAMwB,GACvBmB,EAAS3C,EAAMwB,GACfe,EAAc,2BAAID,GAAL,kBAAkBtC,EAAMwB,MAyCzBN,OAtCG,YAnBD,SAAAmC,GACdC,IAAMC,KA/BE,+BA+BYF,GACfR,MAAK,SAAAW,GACFC,QAAQC,IAAIF,EAAIG,MAChBtB,EAAS,CAACmB,EAAIG,MAAN,mBAAevB,QAE1BU,OAAM,SAAAC,GAAG,OAAIU,QAAQC,IAAIX,MACzBa,SAAQ,WACLrB,EAAcT,MAsBtB+B,CAViB,CACb7D,KAAMsC,EAAWtC,KAAKC,OACtBG,KAAMkC,EAAWlC,KACjBE,UAAWgC,EAAWhC,UACtBE,MAAO8B,EAAW9B,MAClBD,UAAW+B,EAAW/B,UACtBE,eAAgB6B,EAAW7B,eAC3BC,QAAS4B,EAAW5B,QACpBC,QAAS2B,EAAW3B,QAAQV,UA8BpBkB,SAAUA,EACVC,OAAQoB,MAGhB,cAAC,IAAD,CAAOsB,OAAK,EAACV,KAAK,IAAlB,SACI,cAAC,EAAD,MAGAhB,EAAM2B,KAAI,SAAAC,GACN,OAAO,8BAAiBA,EAAIhE,KAArB,YAAiD,mBAAbgE,EAAI5D,KAA2B,KAAO,IAA1E,IAAgF4D,EAAI5D,KAApF,mBAA0G4D,EAAIrC,GAA9G,MAAQqC,EAAIrC,WCrGvCsC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.a30bb2d8.chunk.js","sourcesContent":["import * as yup from 'yup';\r\n\r\nconst formSchema = yup.object().shape({\r\n    name: yup\r\n        .string()\r\n        .trim()\r\n        .min(2, \"name must be at least 2 characters\")\r\n        .required('name is required'),\r\n    size: yup\r\n        .string()\r\n        .oneOf(['Lil Big', 'Issa Biggin', 'Mr. Boombostic!'], \"pick a size, any size!\"),\r\n    pepperoni: yup.boolean(),\r\n    pineapple: yup.boolean(),\r\n    bacon: yup.boolean(),\r\n    roasted_garlic: yup.boolean(),\r\n    chorizo: yup.boolean(),\r\n    special: yup.string(),\r\n});\r\n\r\nexport default formSchema;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-wrapper\">\r\n            <h1>Lambda Eats</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\nconst Pizza = (props) => {\r\n    const { values, change, submit, disabled, errors } = props;\r\n\r\n    const onSubmit = evt => {\r\n        evt.preventDefault();\r\n        submit();\r\n    }\r\n    const onChange = evt => {\r\n        const { name, value, checked, type } = evt.target;\r\n        const valueToUse = type === \"checkbox\" ? checked : value;\r\n        change(name, valueToUse);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pizza-wrapper\">\r\n            <form id=\"pizza-form\" onSubmit={onSubmit}>\r\n                <div className=\"inputs\">\r\n                    <label>Your Name:\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name-input\"\r\n                            name=\"name\"\r\n                            onChange={onChange}\r\n                            value={values.name} />\r\n                    </label>\r\n                    <br/>\r\n                    <label>Pizza Size:\r\n                        <select id=\"size-dropdown\" value={values.size} name=\"size\" onChange={onChange}>\r\n                            <option value=\"\">-- select size --</option>\r\n                            <option value=\"large\">Lil Big</option>\r\n                            <option value=\"larger\">Issa Biggin!</option>\r\n                            <option value=\"absurd\">Mr. Boombostic!</option>\r\n                        </select>\r\n                    </label>\r\n                    <br />\r\n                    <label>pepperoni:\r\n                        <input\r\n                            checked={values.pepperoni}\r\n                            onChange={onChange}\r\n                            name=\"pepperoni\"\r\n                            type=\"checkbox\"\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>pineapple:\r\n                        <input\r\n                            checked={values.pineapple}\r\n                            onChange={onChange}\r\n                            name=\"pineapple\"\r\n                            type=\"checkbox\"\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>bacon:\r\n                        <input\r\n                            checked={values.bacon}\r\n                            onChange={onChange}\r\n                            name=\"bacon\"\r\n                            type=\"checkbox\"\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>roasted garlic:\r\n                        <input\r\n                            checked={values.roasted_garlic}\r\n                            onChange={onChange}\r\n                            name=\"roasted_garlic\"\r\n                            type=\"checkbox\"\r\n                        />\r\n                    </label>\r\n                    <br /><label>chorizo:\r\n                    <input\r\n                        checked={values.chorizo}\r\n                        onChange={onChange}\r\n                        name=\"chorizo\"\r\n                        type=\"checkbox\"\r\n                    />\r\n                </label>\r\n                    <br />\r\n                    <label>Special Instructions:\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"special-text\"\r\n                            name=\"special\"\r\n                            onChange={onChange}\r\n                            value={values.special} />\r\n                    </label>\r\n                    <div className=\"errors\">\r\n                        <div>{errors.name}</div>\r\n                        <div>{errors.size}</div>\r\n                    </div>\r\n                    <div className=\"submit\">\r\n                        <button id='order-button' disabled={disabled}>submit</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Pizza;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport schema from './validation/formSchema';\r\n\r\n//custom components\r\nimport Home from './components/Home';\r\nimport Pizza from './components/Pizza';\r\n\r\nconst API_URL = 'https://reqres.in/api/orders';\r\n\r\nconst initialFormValues = {\r\n    name: \"\",\r\n    size: \"\",\r\n    jalapeno: false,\r\n    pineapple: false,\r\n    bacon: false,\r\n    roasted_garlic: false,\r\n    special: \"\",\r\n};\r\n\r\nconst initialFormErrors = {\r\n    name: \"\",\r\n    size: \"\",\r\n};\r\n\r\nconst initialDisabled = true;\r\nconst initialOrder = [];\r\n\r\nconst App = () => {\r\n    //STATE\r\n    const [order, setOrder] = useState(initialOrder);\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const [formErrors, setFormErrors] = useState(initialFormErrors);\r\n    const [disabled, setDisabled] = useState(initialDisabled);\r\n\r\n\r\n    //HELPERS\r\n\r\n    const postPizza = newPizza => {\r\n        axios.post(API_URL, newPizza)\r\n            .then(res=> {\r\n                console.log(res.data);\r\n                setOrder([res.data, ...order]);\r\n            })\r\n            .catch(err => console.log(err))\r\n            .finally(() => {\r\n                setFormValues(initialFormValues)\r\n            })\r\n    }\r\n\r\n\r\n    //EVENT HANDLERS\r\n    const inputChange = (name, value) => {\r\n        validate(name, value);\r\n        setFormValues({...formValues, [name]:value});\r\n    }\r\n\r\n    const formSubmit = () => {\r\n        const newPizza = {\r\n            name: formValues.name.trim(),\r\n            size: formValues.size,\r\n            pepperoni: formValues.pepperoni,\r\n            bacon: formValues.bacon,\r\n            pineapple: formValues.pineapple,\r\n            roasted_garlic: formValues.roasted_garlic,\r\n            chorizo: formValues.chorizo,\r\n            special: formValues.special.trim(),\r\n        }\r\n        postPizza(newPizza);\r\n    }\r\n\r\n    const validate = (name, value) => {\r\n        yup.reach(schema, name)\r\n            .validate(value)\r\n            .then(() => setFormErrors({ ...formErrors, [name]:''}))\r\n            .catch(err => setFormErrors({ ...formErrors, [name]: err.errors[0] }))\r\n    }\r\n\r\n    //SIDE EFFECTS\r\n    useEffect(() => {\r\n        schema.isValid(formValues).then(valid => setDisabled(!valid))\r\n    }, [formValues]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header>\r\n                <nav>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link id=\"order-pizza\" to=\"/pizza\">Order Pizza</Link>\r\n                </nav>\r\n            </header>\r\n            <Route path=\"/pizza\">\r\n                <Pizza\r\n                    values={formValues}\r\n                    change={inputChange}\r\n                    submit={formSubmit}\r\n                    disabled={disabled}\r\n                    errors={formErrors}\r\n                />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            {\r\n                order.map(piz => {\r\n                    return(<p key={piz.id}>{piz.name} ordered {piz.size === 'Mr. Boombostic'? \"an\" : \"a\"} {piz.size} pizza. (order #{piz.id})</p>)\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\"));"],"sourceRoot":""}